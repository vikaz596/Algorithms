package algorithms.dynamicprogramming;
import java.util.Scanner;

/**
* created by VIKAS SINGH
* on 18 JAN 2016
*/

public class Solution {

    public static void main(String[] args) {
        Scanner stdin = new Scanner(System.in);
        
        int testCases = stdin.nextInt();
        for(int t=0 ; t<testCases ; t++) {
            
            int n = stdin.nextInt();
            int k = stdin.nextInt();
            
            int arr[] = new int[n];
            for(int i=0 ; i<n ; i++)
                arr[i] = stdin.nextInt();
            
            System.out.println(knapsack(arr,n,k));
            
            
        }
        
        stdin.close();
        
    }
    
    public static int knapsack(int arr[], int n, int k) {
        if(n<=0 || k<=0)
            return 0;
        
        else if (arr[n-1]>k)
            return knapsack(arr,n-1,k);
        
        else
            return max(arr[n-1] + knapsack(arr,n,k-arr[n-1]),knapsack(arr,n-1,k));
    }
    
    public static int max(int a, int b) {
        if(a>=b)
            return a;
        else
            return b;
    }
}
